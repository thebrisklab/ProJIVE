% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GenerateToyData.R
\name{GenerateToyData}
\alias{GenerateToyData}
\title{Generates K Simulated Datasets that follow JIVE Model using binary subject scores}
\usage{
GenerateToyData(
  n,
  p,
  JntVarEx,
  IndVarEx,
  jnt_rank = 1,
  equal.eig = FALSE,
  ind_ranks,
  JntVarAdj = TRUE,
  mix.probs = NULL,
  SVD.plots = TRUE,
  Error = TRUE,
  print.cor = TRUE,
  Loads = "Rademacher",
  Scores = "Gaussian_Mixture",
  error.variances = NULL
)
}
\arguments{
\item{n}{Sample size.}

\item{p}{Number of features per block (input as a vector).}

\item{JntVarEx}{Proportions of joint variation explained (input as a vector).}

\item{IndVarEx}{Proportions of individual variation explained (input as a vector).}

\item{jnt_rank}{Joint Rank.}

\item{equal.eig}{Logical (TRUE/FALSE), which allows the user to specify whether components within a data-blocks joint (or individual) signal should be equally waited. The default is FALSE.}

\item{ind_ranks}{Individual rank for each block (input as a vector).}

\item{JntVarAdj}{Logical (TRUE/FALSE): Specify whether signal matrices should be weighted to achieve the desired proportions of variation attributable to the joint signal.}

\item{mix.probs}{A numerical vector that specifies the number of individual components (ranks) for each data block. Each entry describes the probability in the Gaussian Mixture model for the score. Entries need to add to 1.}

\item{SVD.plots}{Logical (TRUE/FALSE): Should plots of signal matrix singular values be produced to verify ranks?}

\item{Error}{Logical (TRUE/FALSE): Should the data be noise-contaminated?}

\item{print.cor}{logical (TRUE/FALSE), Print the correlation matrix for the scores? (Allows one to assess orthoganility between scores/compnents)}

\item{Loads}{char: Toy data can be generated with loadings from 'Gaussian', 'Rademacher', or 'Double_Exp'  (double exponential) distributions. Loadings can also be fixed at binary (0/1) values assigned to half of the variables with keyword 'Fixed'.}

\item{Scores}{char: Joint subject scores can be randomly generated from 'Gaussian', 'Binomial', or 'Gaussian_Mixture' distributions. The last refers to a  mixture of Gaussians with unit variance, where 20\% have mean -4, 50\% have mean 0, and 30\% have mean 4. In all cases individual scores are standard Gaussian.}

\item{error.variances}{A numeric vector specifying the variance of the noise for each dataset.}
}
\value{
K simulated datasets that follow JIVE Model.
Contains four main elements:
\itemize{
\item Data Components: A list containing three sub-lists (each of length K), JointSignalMatrices, IndivSignalMatrices, and NoiseMatrices.
\item Data Blocks: A list of length K, where each element is the final observed dataset (joint + individual + noise) of dimension n x p(k).
\item Scores: A list with two matrices, Joint (n x jnt_rank) and Indiv (n x sum(ind_ranks)).
\item Loadings: A list containing Joint and Indiv loadings.
}
}
\description{
Generates K Simulated Datasets that follow JIVE Model using binary subject scores
}
\examples{
rep_number = 1
r.J = 3
r.I1 = 2
r.I2 = 2
n = 1000
p1 = 20
p2 = 200
JntVarEx1 = 0.1
JntVarEx2 = 0.1
IndVarEx1 = 0.25
IndVarEx2 = 0.25
nparams = p1*(r.J+r.I1)+p2*(r.J+r.I2)+2
prop = n/nparams
JntScores = matrix(rdunif(n*r.J, 0, 5), nrow = n, ncol = r.J)
IndivScore.X = matrix(rweibull(n*r.I1, shape = 1), nrow = n)
IndivScore.Y = matrix(rhnorm(n*r.I2), nrow = n)
Scores = cbind(JntScores, IndivScore.X, IndivScore.Y)
true_signal_ranks = r.J + c(r.I1,r.I2)
ToyDat = GenerateToyData(n = n, p = c(p1, p2), JntVarEx = c(JntVarEx1, JntVarEx2), equal.eig = F, IndVarEx = c(IndVarEx1, IndVarEx2), jnt_rank = r.J, ind_ranks = c(r.I1, r.I2), JntVarAdj = F, SVD.plots = F, Error = T, print.cor = TRUE, Loads = "Rademacher", Scores = "Gaussian_Mixture", error.variances = c(1,1))
}
